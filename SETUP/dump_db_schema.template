#!/bin/sh

# Dump (to stdout) the SQL commands to create DP tables.

db_user='<<DB_USER>>'
db_password='<<DB_PASSWORD>>'
db_name='<<DB_NAME>>'
code_dir=<<CODE_DIR>>

setup_dir=`dirname $0`

export LC_ALL=POSIX
# because on www.pgdp.net, none of the LC_* are defined,
# and LANG=en_US.UTF-8, which produces case-insensitivity
# in grep and sed.

# We don't want to dump schema for *all* tables in the database.
# So how will we determine which ones to dump?
if [ "$1" = '--table-list-from-db' ]; then
    table_list_source='db'
elif [ "$1" = '--table-list-from-code' ]; then
    table_list_source='code'
else
    table_list_source='code'
fi

get_table_names()
{
    if [ $table_list_source = db ]; then
        mysql --user=$db_user --password="$db_password" \
            -D $db_name \
            --skip-column-names --batch --execute='show tables' |
        grep -v \
            -e '^projectID' \
            -e active_users \
            -e begin_users \
            -e end_users \
            -e old_phpbb_users \
            -e phpwiki \
            -e projectstemp \
            -e ranks \
            -e states |
        sort
    elif [ $table_list_source = code ]; then
        find $code_dir -type f \
            \( -name '*.php' -o -name '*.inc' -o -name '*.pl' \) |

        xargs grep -E '(FROM|INTO|JOIN) ' |

        # Suppress some non-SQL occurrences of those keywords:
        grep -v \
            -e 'the FROM clause' \
            -e 'FAR FROM HOME' \
            -e 'INSERT INTO the same table' \
        |

        sed -n -e'
            s/.*\<FROM  *//
            s/.*\<INTO  *//
            s/.*\<JOIN  *//
            s/^\([a-z_0-9][a-z_0-9]*\).*/\1/p
            s/^`\([^`]*\)`.*/\1/p
        ' |

        # 'cur' and 'old' are tables referenced in DifferenceEngine.inc,
        #     by code that we presumably don't execute.
        # 'member_stats', 'user_teams_stats', and 'pagestats' are obsolete
        #     tables that are referenced by some upgrade scripts.
        # The rest are temporary tables.
        grep -v -x \
            -e cur -e old \
            -e member_stats -e user_teams_stats -e pagestats \
            -e _page_latest \
            -e access_log_summary \
            -e active_page_counts \
            -e beginpages \
            -e newbies \
            -e test_u \
            -e user_filters_temp \
            -e project_event_subscriptions_grouped_by_project \
        |

        sort -u
    else
        echo 1>&2 "bad table_list_source: '$table_list_source'"
        exit 1
    fi
}

tables=`get_table_names`

if true; then
    mysqldump --user=$db_user --password="$db_password" \
        --no-data --quote-names --add-drop-table=FALSE --force \
        $db_name $tables |

    # Ensure the per-table chunks are in a consistent order:
    php -f  $setup_dir/sort_mysqldump.php |

    # Make it look more like the dump from phpMyAdmin:
    sed '
        s/^--/#/
        s/for table .\(.*\)./for table \`\1\`/
        /^# Table structure/ a\
#\
# Creation:\
# Last update:
        s/ ENGINE=/ TYPE=/
        /^) TYPE=/ a\
# --------------------------------------------------------
        '
        # Why change "ENGINE" to "TYPE"?
        #
        # "TYPE" was the original keyword.
        # "ENGINE" was added (and "TYPE" deprecated)
        # in MySQL 4.0.18 (for 4.0) and 4.1.2 (for 4.1),
        # but "TYPE" is still supported throughout 4.x.
        #
        # This script might be run on a platform where mysqldump
        # generates "ENGINE", but we want the result (in the
        # form of db_schema.sql) to work on platforms that don't
        # recognize "ENGINE", only "TYPE". Thus the substitution.
fi
# vim: sw=4 ts=4 expandtab ai
