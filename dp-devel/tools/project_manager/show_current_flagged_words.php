<?php
$relPath="./../../pinc/";
include_once($relPath.'site_vars.php');
include_once($relPath.'dp_main.inc');
include_once($relPath.'project_states.inc');
include_once($relPath.'stages.inc');
include_once($relPath.'Project.inc');
include_once('./post_files.inc');
include_once($relPath.'word_checker.inc');

set_time_limit(0); // no time limit

$projectid = $_GET["projectid"];

// if format is 'text', all words and frequencies will be printed
// if format is not 'text', an HTML page is displayed
$format = @$_GET["format"];

// anything that appears in the list less than this number
// won't show up in the list
$minFreq = array_get($_GET, 'minFreq', 5);

// get the latest project text of all pages up to last possible round
$last_possible_round = get_Round_for_round_number(MAX_NUM_PAGE_EDITING_ROUNDS);
$pages_res = page_info_query($projectid,$last_possible_round->id,'LE');
$all_pages_text = join_proofed_text($projectid,$pages_res,false,false,'');

// normalize the text for processing
#$all_pages_text=preg_replace("/-+File: .*?----+/",'',$all_pages_text);
$all_pages_text = preg_replace("/^-+File: .*$/m",'',$all_pages_text);

$all_words_in_text = get_all_words_in_text($all_pages_text);
$all_words_w_freq = generate_frequencies($all_words_in_text);

// now run it through the spell-checker
list($bad_words,$languages,$messages) =
    get_bad_words_for_text($all_pages_text,$projectid,'all','',array());

// $bad_words doesn't have frequency info, 
// so start with the info in $all_words_w_freq,
// and extract the items where the key matches a key in $bad_words.

$bad_words_w_freq = array_intersect_key( $all_words_w_freq, $bad_words );

// sort the list by frequency, then by word
array_multisort(array_values($bad_words_w_freq), SORT_DESC, array_keys($bad_words_w_freq), SORT_ASC, $bad_words_w_freq);


// if the user wants the list in text-only mode
if($format == "text") {
    # The following is a pure hack for evil IE not accepting filenames
    $filename="${projectid}_WordChecker_flag_words.txt";
    header("Content-type: application/octet-stream");
    header('Content-Disposition: attachment; filename="' . $filename . '"');
    header('Cache-Control: must-revalidate, post-check=0, pre-check=0');
    header('Pragma: public');

    // freq side
    foreach( $bad_words_w_freq as $word => $freq) {
        echo "$word - $freq\r\n";
    }
    exit;
}

?>
<html>
<head>
<title>Candidate words from project</title>
</head>
<body>
<h1>Candidate words from project</h1>
<p>The list below contains words from this project that the WordChecker currently considers bad. The list was generated by accessing the most recent text of each page and running it through the WordChecker. The WordChecker uses the current dictionaries/wordlists at the external, site, and project levels. If you find words in this list that should not be flagged in the WordChecker interface, add them to the project's Good Words List by copying them into the Good Words box when editing the project. (Take care not to overwrite any words that are already in the box.) See also the <a href="<?=$code_url;?>/faq/spellcheck-faq.php">WordCheck FAQ</a> for more information on the new WordCheck system.</p>

<?
$cutoffOptions = array(1,2,3,4,5,10,25,50);
$cutoffString = "";
foreach($cutoffOptions as $cutoff) {
    if($cutoff == $minFreq)
        $cutoffString .= "$cutoff | ";
    else
        $cutoffString .= "<a href='generate_dict_suggestions.php?projectid=$projectid&amp;minFreq=$cutoff'>$cutoff</a> | ";
}
$cutoffString = preg_replace("/ \| $/","",$cutoffString);
?>
<p>Words that appear fewer than <?php echo $minFreq;?> times are not shown. Other cutoff options are available: <?PHP echo $cutoffString; ?>.</p>
<p>You can also <a href="generate_dict_suggestions.php?projectid=<?PHP echo $projectid; ?>&amp;format=text">download</a> a copy of the word list with frequencies for offline analysis. When adding the final list to the input box on the Edit Project page, the frequencies can be left in and the system will remove them.</p>

<?
if ( count($messages) > 0 )
{
    echo "<p>\n";
    echo "The following warnings/errors were raised:<br>\n";
    foreach ( $messages as $message )
    {
        echo "$message<br>\n";
    }
    echo "</p>\n";
}
?>

<table>
<tr><th>Frequency</th><th>Word</th></tr>

<?php
// we'll do it in a table so project managers can copy-paste
// the values list into the accept textarea
// words printed
$words_printed = 0;

// freq side
echo "<tr>";
echo "<td style='font-family: DPCustomMono2,monospace'><hr>";
foreach( $bad_words_w_freq as $word => $freq ) {
    if($freq < $minFreq) break;
    echo "$freq<br>\n";
    $words_printed++;
}
echo "</td>\n";

// word side
echo "<td style='font-family: DPCustomMono2,monospace'><hr>";
foreach( $bad_words_w_freq as $word => $freq ) {
    if($freq < $minFreq) break;
    echo "$word<br>\n";
}

?>

</td></tr></table>

<?
    $freqString = _('%d additional words with frequency less than %d were found and not shown.');
    echo '<p>' . sprintf($freqString,sizeof($bad_words_w_freq)-$words_printed,$minFreq) . '</p>';

// vim: sw=4 ts=4 expandtab
?>
</body>
</html>
